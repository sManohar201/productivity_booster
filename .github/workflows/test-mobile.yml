name: Test Mobile App

on:
  push:
    branches: [ main, development ]
    paths: 
      - 'apps/mobile/**'
      - '.github/workflows/test-mobile.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/mobile/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
    
    - name: Install dependencies
      run: cd apps/mobile && npm install
    
    - name: Run TypeScript checks
      run: cd apps/mobile && npx tsc --noEmit
    
    - name: Run Expo Doctor
      run: cd apps/mobile && npx expo doctor

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
    
    - name: Install dependencies
      run: cd apps/mobile && npm install
    
    - name: Build Android APK
      run: cd apps/mobile && expo build:android --type apk --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    
    # Note: For production, you'd want to build AAB and publish to Google Play Store
    # - name: Upload to Google Play Store
    #   uses: r0adkll/upload-google-play@v1
    #   with:
    #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
    #     packageName: com.yourcompany.productivitybooster
    #     releaseFiles: apps/mobile/dist/*.aab
    #     track: internal

  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
    
    - name: Install dependencies
      run: cd apps/mobile && npm install
    
    - name: Build iOS IPA
      run: cd apps/mobile && expo build:ios --type archive --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
        EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
    
    # Note: For production, you'd want to publish to App Store
    # - name: Upload to App Store
    #   run: cd apps/mobile && expo upload:ios --non-interactive
    #   env:
    #     EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}